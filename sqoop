//Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a '|' and lines are separated by '\n'. 
Null values are represented as -1 for numbers and "NOT-AVAILABLE" for strings. Only records with product id greater than or equal to 
1 and less than or equal to 1000 should be imported and use 3 mappers for importing. The destination file should be stored as a text 
file to directory  /user/sumitsinha1680/problem5/products-text. 

sqoop import \
--connect jdbc:mysql://ms.itversity.com/retail_export \
--username retail_user \
--password itversity \
--table products_replica \
--fields-terminated-by '|' \
--lines-terminated-by '\n' \
--null-string "NOT AVAILABLE" \
--null-non-string -1 \
-m 3 \
--target-dir /user/sumitsinha1680/problem5/product-text \
--where "product_id between 1 and 1000" \
--outdir /home/sumitsinha1680/sqoop1 \
--boundary-query "select min(product_id), max(product_id) from products_replica where product_id between 1 and 1000";

//Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a '*' and lines are separated by '\n
Null values are represented as -1000 for numbers and "NA" for strings. Only records with product id less than or equal to 1111 should 
be imported and use 2 mappers for importing. The destination file should be stored as a text file to directory 
/user/sumitsinha1680/problem5/products-text-part1. 

sqoop import \
--connect jdbc:mysql://ms.itversity.com/retail_export \
--username retail_user \
--password itversity \
--table products_replica \
--fields-terminated-by '*' \
--lines-terminated-by '\n' \
--null-string "NA" \
--null-non-string -1000 \
-m 2 \
--target-dir /user/sumitsinha1680/problem5/product-text-part1 \
--where "product_id <= 1111" \
--outdir /home/sumitsinha1680/sqoop2 \
--boundary-query "select min(product_id), max(product_id) from products_replica where product_id <= 1111";

//Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a '*' and lines are separated by '\n'
Null values are represented as -1000 for numbers and "NA" for strings. Only records with product id greater than 1111 
should be imported and use 5 mappers for importing. The destination file should be stored as a text file to directory 
 /user/sumitsinha1680/problem5/products-text-part2.
 
 sqoop import \
 --connect jdbc:mysql://ms.itversity.com/retail_export \
 --username retail_user \
 --password itversity \
 --table products_replica \
 --fields-terminated-by '*' \
 --lines-terminated-by '\n' \
 --null-string "NA" \
 --null-non-string -1000 \
 -m 5 \
 --target-dir /user/sumitsinha1680/problem5/product-text-part2 \
 --where "product_id > 1111"
 --outdir /home/sumitsinha1680/sqoop3 \
 --boundary-query "select min(product_id), max(product_id) from products_replica where product_id > 1111";

//Using sqoop merge data available in /user/cloudera/problem5/products-text-part1 and /user/cloudera/problem5/products-text-
part2 to produce a new set of files in /user/cloudera/problem5/products-text-both-parts

sqoop merge \
--class-name products_replica \
--jar-file  /tmp/sqoop-sumitsinha1680/compile/14ff0fcea30b53b79cf844e0a3257758/products_replica.jar \
--new-data /user/sumitsinha1680/problem5/product-text-part2 \
--onto /user/sumitsinha1680/problem5/product-text-part1 \
--target-dir /user/sumitsinha1680/problem5/products-text-both-parts \
--merge-key product_id;

//Using sqoop do the following. Read the entire steps before you create the sqoop job.
create a sqoop job Import Products_replica table as text file to directory /user/sumitsinha1680problem5/products-incremental. Import all the records.
insert three more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
insert 2 more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
Validate to make sure the records have not be duplicated in HDFS

sqoop job --create first_sqoop_job \
-- import \
--connect jdbc:mysql://ms.itversity.com/retail_export \
--username retail_user \
--password itversity \
--table products_replica \
--target-dir /user/sumitsinha1680/problem5/products-incremental \
--check-column product_id \
--incremental append \
--last-value 1345;

sqoop job --exec first_sqoop_job

On MySQL command line -

mysql> insert into products_replica values (1346,2,'something 1','something 2',300.00,'not avaialble',3,'STRONG');
mysql> insert into products_replica values (1347,5,'something 787','something 2',356.00,'not avaialble',3,'STRONG');

On terminal - 

sqoop job --exec first_sqoop_job

On MYSQL Command Line

insert into products_replica values (1376,4,'something 1376','something 2',1.00,'not avaialble',3,'WEAK');
insert into products_replica values (1365,4,'something 1376','something 2',10.00,'not avaialble',null,'NOT APPLICABLE');

On terminal - 

sqoop job --exec first_sqoop_job

//Using sqoop do the following. Read the entire steps before you create the sqoop job.
create a hive table in database named problem5 using below command 
create table products_hive  (product_id int, product_category_id int, product_name string, product_description string, product_price float, product_imaage string,product_grade int,  product_sentiment string);
create a sqoop job Import Products_replica table as hive table to database named problem5. name the table as products_hive. 
insert three more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
insert 2 more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
Validate to make sure the records have not been duplicated in Hive table
